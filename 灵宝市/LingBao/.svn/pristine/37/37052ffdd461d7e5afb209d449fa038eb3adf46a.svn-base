<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
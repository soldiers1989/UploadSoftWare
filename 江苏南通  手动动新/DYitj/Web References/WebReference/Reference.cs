//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace AIO.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TestplaninfoSoapBinding", Namespace="http://impl.service.spkj.trueway.com.cn/")]
    public partial class Testplaninfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getOpenStateJssbOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataTrendOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestPlanInfoDataPublicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTestResultNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExceptionResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStallInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestPlanInfoByJcsbOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestPlanInfoByJcryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Testplaninfo() {
            this.Url = global::AIO.Properties.Settings.Default.DY_Detector_WebReference_Testplaninfo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getOpenStateJssbCompletedEventHandler getOpenStateJssbCompleted;
        
        /// <remarks/>
        public event getDataTrendCompletedEventHandler getDataTrendCompleted;
        
        /// <remarks/>
        public event TestPlanInfoDataPublicationCompletedEventHandler TestPlanInfoDataPublicationCompleted;
        
        /// <remarks/>
        public event submitTestResultNewCompletedEventHandler submitTestResultNewCompleted;
        
        /// <remarks/>
        public event getExceptionResultCompletedEventHandler getExceptionResultCompleted;
        
        /// <remarks/>
        public event submitTestResultCompletedEventHandler submitTestResultCompleted;
        
        /// <remarks/>
        public event getStallInfoCompletedEventHandler getStallInfoCompleted;
        
        /// <remarks/>
        public event getTestPlanInfoByJcsbCompletedEventHandler getTestPlanInfoByJcsbCompleted;
        
        /// <remarks/>
        public event getTestPlanInfoByJcryCompletedEventHandler getTestPlanInfoByJcryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getOpenStateJssb([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jccsXml) {
            object[] results = this.Invoke("getOpenStateJssb", new object[] {
                        jccsXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOpenStateJssbAsync(string jccsXml) {
            this.getOpenStateJssbAsync(jccsXml, null);
        }
        
        /// <remarks/>
        public void getOpenStateJssbAsync(string jccsXml, object userState) {
            if ((this.getOpenStateJssbOperationCompleted == null)) {
                this.getOpenStateJssbOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOpenStateJssbOperationCompleted);
            }
            this.InvokeAsync("getOpenStateJssb", new object[] {
                        jccsXml}, this.getOpenStateJssbOperationCompleted, userState);
        }
        
        private void OngetOpenStateJssbOperationCompleted(object arg) {
            if ((this.getOpenStateJssbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOpenStateJssbCompleted(this, new getOpenStateJssbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDataTrend([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parametersXml) {
            object[] results = this.Invoke("getDataTrend", new object[] {
                        parametersXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataTrendAsync(string parametersXml) {
            this.getDataTrendAsync(parametersXml, null);
        }
        
        /// <remarks/>
        public void getDataTrendAsync(string parametersXml, object userState) {
            if ((this.getDataTrendOperationCompleted == null)) {
                this.getDataTrendOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataTrendOperationCompleted);
            }
            this.InvokeAsync("getDataTrend", new object[] {
                        parametersXml}, this.getDataTrendOperationCompleted, userState);
        }
        
        private void OngetDataTrendOperationCompleted(object arg) {
            if ((this.getDataTrendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataTrendCompleted(this, new getDataTrendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TestPlanInfoDataPublication([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parametersXml) {
            object[] results = this.Invoke("TestPlanInfoDataPublication", new object[] {
                        parametersXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestPlanInfoDataPublicationAsync(string parametersXml) {
            this.TestPlanInfoDataPublicationAsync(parametersXml, null);
        }
        
        /// <remarks/>
        public void TestPlanInfoDataPublicationAsync(string parametersXml, object userState) {
            if ((this.TestPlanInfoDataPublicationOperationCompleted == null)) {
                this.TestPlanInfoDataPublicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestPlanInfoDataPublicationOperationCompleted);
            }
            this.InvokeAsync("TestPlanInfoDataPublication", new object[] {
                        parametersXml}, this.TestPlanInfoDataPublicationOperationCompleted, userState);
        }
        
        private void OnTestPlanInfoDataPublicationOperationCompleted(object arg) {
            if ((this.TestPlanInfoDataPublicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestPlanInfoDataPublicationCompleted(this, new TestPlanInfoDataPublicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string submitTestResultNew([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string resultXml) {
            object[] results = this.Invoke("submitTestResultNew", new object[] {
                        resultXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitTestResultNewAsync(string resultXml) {
            this.submitTestResultNewAsync(resultXml, null);
        }
        
        /// <remarks/>
        public void submitTestResultNewAsync(string resultXml, object userState) {
            if ((this.submitTestResultNewOperationCompleted == null)) {
                this.submitTestResultNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTestResultNewOperationCompleted);
            }
            this.InvokeAsync("submitTestResultNew", new object[] {
                        resultXml}, this.submitTestResultNewOperationCompleted, userState);
        }
        
        private void OnsubmitTestResultNewOperationCompleted(object arg) {
            if ((this.submitTestResultNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTestResultNewCompleted(this, new submitTestResultNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getExceptionResult([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parametersXml) {
            object[] results = this.Invoke("getExceptionResult", new object[] {
                        parametersXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExceptionResultAsync(string parametersXml) {
            this.getExceptionResultAsync(parametersXml, null);
        }
        
        /// <remarks/>
        public void getExceptionResultAsync(string parametersXml, object userState) {
            if ((this.getExceptionResultOperationCompleted == null)) {
                this.getExceptionResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExceptionResultOperationCompleted);
            }
            this.InvokeAsync("getExceptionResult", new object[] {
                        parametersXml}, this.getExceptionResultOperationCompleted, userState);
        }
        
        private void OngetExceptionResultOperationCompleted(object arg) {
            if ((this.getExceptionResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExceptionResultCompleted(this, new getExceptionResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string submitTestResult([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string resultXml) {
            object[] results = this.Invoke("submitTestResult", new object[] {
                        resultXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitTestResultAsync(string resultXml) {
            this.submitTestResultAsync(resultXml, null);
        }
        
        /// <remarks/>
        public void submitTestResultAsync(string resultXml, object userState) {
            if ((this.submitTestResultOperationCompleted == null)) {
                this.submitTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTestResultOperationCompleted);
            }
            this.InvokeAsync("submitTestResult", new object[] {
                        resultXml}, this.submitTestResultOperationCompleted, userState);
        }
        
        private void OnsubmitTestResultOperationCompleted(object arg) {
            if ((this.submitTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTestResultCompleted(this, new submitTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getStallInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parametersXml) {
            object[] results = this.Invoke("getStallInfo", new object[] {
                        parametersXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getStallInfoAsync(string parametersXml) {
            this.getStallInfoAsync(parametersXml, null);
        }
        
        /// <remarks/>
        public void getStallInfoAsync(string parametersXml, object userState) {
            if ((this.getStallInfoOperationCompleted == null)) {
                this.getStallInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStallInfoOperationCompleted);
            }
            this.InvokeAsync("getStallInfo", new object[] {
                        parametersXml}, this.getStallInfoOperationCompleted, userState);
        }
        
        private void OngetStallInfoOperationCompleted(object arg) {
            if ((this.getStallInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStallInfoCompleted(this, new getStallInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getTestPlanInfoByJcsb([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jcsbXml) {
            object[] results = this.Invoke("getTestPlanInfoByJcsb", new object[] {
                        jcsbXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTestPlanInfoByJcsbAsync(string jcsbXml) {
            this.getTestPlanInfoByJcsbAsync(jcsbXml, null);
        }
        
        /// <remarks/>
        public void getTestPlanInfoByJcsbAsync(string jcsbXml, object userState) {
            if ((this.getTestPlanInfoByJcsbOperationCompleted == null)) {
                this.getTestPlanInfoByJcsbOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestPlanInfoByJcsbOperationCompleted);
            }
            this.InvokeAsync("getTestPlanInfoByJcsb", new object[] {
                        jcsbXml}, this.getTestPlanInfoByJcsbOperationCompleted, userState);
        }
        
        private void OngetTestPlanInfoByJcsbOperationCompleted(object arg) {
            if ((this.getTestPlanInfoByJcsbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestPlanInfoByJcsbCompleted(this, new getTestPlanInfoByJcsbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.spkj.trueway.com.cn/", ResponseNamespace="http://service.spkj.trueway.com.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getTestPlanInfoByJcry([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jcryXml) {
            object[] results = this.Invoke("getTestPlanInfoByJcry", new object[] {
                        jcryXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTestPlanInfoByJcryAsync(string jcryXml) {
            this.getTestPlanInfoByJcryAsync(jcryXml, null);
        }
        
        /// <remarks/>
        public void getTestPlanInfoByJcryAsync(string jcryXml, object userState) {
            if ((this.getTestPlanInfoByJcryOperationCompleted == null)) {
                this.getTestPlanInfoByJcryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestPlanInfoByJcryOperationCompleted);
            }
            this.InvokeAsync("getTestPlanInfoByJcry", new object[] {
                        jcryXml}, this.getTestPlanInfoByJcryOperationCompleted, userState);
        }
        
        private void OngetTestPlanInfoByJcryOperationCompleted(object arg) {
            if ((this.getTestPlanInfoByJcryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestPlanInfoByJcryCompleted(this, new getTestPlanInfoByJcryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getOpenStateJssbCompletedEventHandler(object sender, getOpenStateJssbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOpenStateJssbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOpenStateJssbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getDataTrendCompletedEventHandler(object sender, getDataTrendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataTrendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataTrendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TestPlanInfoDataPublicationCompletedEventHandler(object sender, TestPlanInfoDataPublicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestPlanInfoDataPublicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestPlanInfoDataPublicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitTestResultNewCompletedEventHandler(object sender, submitTestResultNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitTestResultNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitTestResultNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getExceptionResultCompletedEventHandler(object sender, getExceptionResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExceptionResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExceptionResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void submitTestResultCompletedEventHandler(object sender, submitTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getStallInfoCompletedEventHandler(object sender, getStallInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStallInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStallInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getTestPlanInfoByJcsbCompletedEventHandler(object sender, getTestPlanInfoByJcsbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestPlanInfoByJcsbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestPlanInfoByJcsbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getTestPlanInfoByJcryCompletedEventHandler(object sender, getTestPlanInfoByJcryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestPlanInfoByJcryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestPlanInfoByJcryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
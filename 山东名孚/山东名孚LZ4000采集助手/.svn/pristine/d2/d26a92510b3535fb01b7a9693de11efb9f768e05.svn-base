<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        55wFAPB/phn+yC8CAIDBNMMf/nkAADCYZvhDPwsAAAbTdD740wAAYDBN5wM/CQAABtN03v/jAABgME3n
        fXcFAACDaTrv/X4AADCYpnPxdwIAgME0nfd8MwAAGEzTfffXAwCAwTTdi7YHAACDaboX3hYAAAym6V5w
        awAAMJime/7NAQDAYJruO78UAAAMphk5b1sAADCYZuTtNwQAAINpRt62NQAAGEwbU9e2HwAAGERzzEU3
        BgAAg2nunnwqAAAYjJgCACgQUwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAVi
        CgCgQEwBABSIKQCAAjEFAFAgpgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArE
        FABAgZgCACgQUwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCgQEwBABSI
        KQCAAjEFAFAgpgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABAgZgCACgQ
        UwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCgQEwBABSIKQCAAjEFAFAg
        pgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABAgZgCACgQUwAABWIKAKBA
        TAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCgQEwBABSIKQCAAjEFAFAgpgAACsQUAECB
        mAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABAgZgCACgQUwAABWIKAKBATAEAFIgpAIAC
        MQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCgQEwBABSIKQCAAjEFAFAgpgAACsQUAECBmAIAKBBTAAAF
        YgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABAgZgCACgQUwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAK
        xBQAQIGYAgAoEFMAAAViCgCgQEwBABSIKQCAAjEFAFAgpgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAU
        iCkAgAIxBQBQIKYAAArEFABAgZgCACgQUwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAo
        EFMAAAViCgCgQEwBABSIKQCAAjEFAFAgpgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQ
        IKYAAArEFABAgZgCACgQUwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCg
        QEwBABSIKQCAAjEFAFAgpgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABA
        gZgCACgQUwAABWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCgQEwBABSIKQCA
        AjEFAFAgpgAACsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABAgZgCACgQUwAA
        BWIKAKBATAEAFIgpAIACMQUAUCCmAAAKxBQAQIGYAgAoEFMAAAViCgCgQEwBABSIKQCAAjEFAFAgpgAA
        CsQUAECBmAIAKBBTAAAFYgoAoEBMAQAUiCkAgAIxBQBQIKYAAArEFABAgZgCACgQUwAABWIKAKBATAEA
        FIgpAIACMQUAUCCmAAAKxBQAwMCeir8DCjXk5MER0PkAAAAASUVORK5CYII=
</value>
  </data>
</root>
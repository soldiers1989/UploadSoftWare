<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        I1JWckUfAAAAAElFTkSuQmCC
</value>
  </data>
</root>